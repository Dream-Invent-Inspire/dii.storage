using dii.storage.Attributes;
using System;

namespace dii.storage.Models.Interfaces
{
    /// <summary>
    /// The contract to ensure clean interaction with <see cref="Optimizer"/> with time to live configurations.
    /// </summary>
    public interface IDiiTimeToLiveEntity
    {
        /// <summary>
        /// The computed last update unix timestamp of the stored object. Necessary for time to live operations.
        /// </summary>
        /// <remarks>
        /// This value should be generated by the storage engine automatically and should not be manually populated.
        /// </remarks>
        long LastUpdated { get; set; }

        /// <summary>
        /// The time to live in seconds.
        /// </summary>
        /// <remarks>
        /// This value is seconds after the last modified timestamp. Each update to the object resets the TTL countdown.
		/// <para>
		/// Set by using the <see cref="EnableTimeToLiveAttribute" /> on the entity.
		/// </para>
        /// </remarks>
        int TimeToLiveInSeconds { get; set; }

        /// <summary>
        /// The time to live decay date time.
        /// </summary>
        /// <remarks>
        /// This value is calculated using the <see cref="LastUpdated" /> and the <see cref="TimeToLiveInSeconds" /> value.
        /// </remarks>
        DateTimeOffset? TimeToLiveDecayDateTime { get; }
    }
}